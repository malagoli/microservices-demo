//
// Copyright 2014 GoDataDriven B.V.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// This is the default configuration.
divolte {
  global {
    server {
      // The host to which the server binds.
      // Set to a specific IP address to selectively listen on that interface.
      // If not present, a loopback-only address will be bound.
      host = 0.0.0.0

      // The port on which the sever listens.
      port = 8290

      // Whether to use the X-Forwarded-For header HTTP header
      // for determining the source IP of a request if present.
      // When a X-Forwared-For header is present, the rightmost
      // IP address of the value is used as source IP when
      // when multiple IP addresses are separated by a comma.
      // When the header is present more than once, the last
      // value will be used.
      // E.g.
      // "X-Forwarded-For: 10.200.13.28, 11.45.82.30" ==> 11.45.82.30
      //
      // "X-Forwarded-For: 10.200.13.28"
      // "X-Forwarded-For: 11.45.82.30" ==> 11.45.82.30
      use_x_forwarded_for = true
      use_x_forwarded_for = ${?DIVOLTE_USE_XFORWARDED_FOR}

      // When true Divolte Collector serves a static test page at /.
      serve_static_resources = true
      serve_static_resources = ${?DIVOLTE_SERVICE_STATIC_RESOURCES}

      // Whether requests (and their response) should be logged for debugging.
      // This is for testing purposes only; it should never be enabled in production.
      debug_requests = true
    }

    mapper {
      // Size of the buffer used by each mapper to hold the incoming
      // events that need to be mapped. This is rounded up to the
      // nearest power of two.
      buffer_size = 1048576

      // The number of threads each configured mapper should use to
      // process the events.
      threads = 1

      // The amount of memory that each mapper thread should use for
      // detecting duplicate events.
      duplicate_memory_size = 1000000

      // This section controls the user agent parsing settings. The user agent
      // parsing is based on this library (https://github.com/before/uadetector),
      // which allows for dynamic reloading of the backing database if a internet
      // connection is available.
      user_agent_parser {
        // The parser type. Possible values are:
        // - non_updating:         Uses a local database, bundled
        //                         with Divolte Collector.
        // - online_updating:      Uses a online database only, never falls back
        //                         to the local database.
        // - caching_and_updating: Uses a cached version of the online database
        //                         and periodically checks for new version at the
        //                         remote location. Updates are downloaded
        //                         automatically and cached locally.
        type = non_updating

        // User agent parsing is a relatively expensive operation that requires
        // many regular expression evaluations. Very often the same user agent
        // will make consecutive requests and many clients will have the exact
        // same user agent as well. It therefore makes sense to cache the
        // parsing results in memory and do a lookup before trying a parse.
        // This setting determines how many unique user agent strings will be
        // cached.
        cache_size = 1000
      }
    }

    gcps {
        enabled = true
        project_id = ${?PROJECT_ID}

    }
  }


  sources {

    browser = {
      // This is a browser source.
      type = browser
      prefix = /tracking
      event_suffix = event

      // The name of the cookie used for setting a party ID
      party_cookie = _dvp
      party_cookie = ${?DIVOLTE_PARTY_COOKIE}

      // The expiry time for the party ID cookie
      party_timeout = 730 days
      party_timeout = ${?DIVOLTE_PARTY_TIMEOUT}

      // The name of the cookie used tracking the session ID
      session_cookie = _dvs
      session_cookie = ${?DIVOLTE_SESSION_COOKIE}

      // The expiry time for a session
      session_timeout = 30 minutes
      session_timeout = ${?DIVOLTE_SESSION_TIMEOUT}

      // The cookie domain that is assigned to the cookies.
      // When left empty, the cookie will have no domain
      // explicitly associated with it, which effectively
      // sets it to the website domain of the page that
      // contains the Divolte Collector JavaScript.
      cookie_domain = ''
      cookie_domain = ${?DIVOLTE_COOKIE_DOMAIN}

      javascript {
        // Name of the script file. This changes the divolte.js part in
        // the script url: http://www.domain.tld/divolte.js
        name = divolte.js
        name = ${?DIVOLTE_JAVASCRIPT_NAME}

        // Enable or disable the logging on the JavaScript console in
        // the browser
        logging = false
        logging = ${?DIVOLTE_JAVASCRIPT_LOGGING}

        // When true, the served JavaScript will be compiled, but not
        // minified, improving readability when debugging in the browser.
        debug = false
        debug = ${?DIVOLTE_JAVASCRIPT_DEBUG}

        // When false, divolte.js will not automatically send a pageView
        // event after being loaded. This way clients can send a initial
        // event themselves and have full control over the event type and
        // the custom parameters that are sent with the initial event.
        auto_page_view_event = true
        auto_page_view_event = ${?DIVOLTE_JAVASCRIPT_AUTO_PAGE_VIEW_EVENT}
      }
    }
  }

  // mappings {
  //   // using the default mapping from all sources to all sinks with the default schema and mapping
  // }


  sinks {
    divolte_sink {
        type = gcps
        retry_settings.max_attempts = 10
    }
  }
}